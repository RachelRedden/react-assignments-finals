{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rachel\\\\Documents\\\\GitHub\\\\react-assignments4\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n\n  // if (data.isError) {\n  //     return <p>{data.message}</p>;\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //     return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}), {\n    //     status: 500,\n    // });\n    return json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/rachel/Documents/GitHub/react-assignments4/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const data = useLoaderData();\r\n\r\n    // if (data.isError) {\r\n    //     return <p>{data.message}</p>;\r\n    // }\r\n    const events = data.events;\r\n \r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n        if (!response.ok) {\r\n        //     return { isError: true, message: 'Could not fetch events.' };\r\n        // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}), {\r\n        //     status: 500,\r\n        // });\r\n        return json({ message: 'Could not fetch events.'}, {\r\n            status: 500,\r\n            }\r\n        );\r\n        } else {\r\n            return response;\r\n        }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGP,aAAa,EAAE;;EAE5B;EACA;EACA;EACA,MAAMQ,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE5B,oBAAOJ,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACvC;AAACN,EAAA,CATQD,UAAU;EAAA,QACFL,aAAa;AAAA;AAAAa,EAAA,GADrBR,UAAU;AAWnB,eAAeA,UAAU;AAEzB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAExD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAClB;IACA;IACA;IACA;IACA,OAAOhB,IAAI,CAAC;MAAEiB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAC/CC,MAAM,EAAE;IACR,CAAC,CACJ;EACD,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACR;AAAC,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}